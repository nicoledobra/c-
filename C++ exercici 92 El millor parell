)
#include <iostream>
#include <vector>

int findMaxPairSum(const std::vector<int>& numbers) {
    int maxSum = numbers[0] + numbers[1];
    for (int i = 1; i < numbers.size() - 1; i++) {
        int sum = numbers[i] + numbers[i + 1];
        if (sum > maxSum) {
            maxSum = sum;
        }
    }
    return maxSum;
}

int main() {
    int n;
    std::cin >> n;

    std::vector<int> numbers(n);
    for (int i = 0; i < n; i++) {
        std::cin >> numbers[i];
    }

    int result = findMaxPairSum(numbers);
    std::cout << result << std::endl;

    return 0;
}

R:
3 9 2 7
11

2)
#include <iostream>
#include <vector>

int findMaxPairSum(const std::vector<int>& numbers) {
    int maxSum = numbers[0] + numbers[1];
    int maxIndex = 0;
    
    for (int i = 1; i < numbers.size() - 1; i++) {
        int sum = numbers[i] + numbers[i + 1];
        if (sum > maxSum) {
            maxSum = sum;
            maxIndex = i;
        }
    }
    
    return maxSum;
}

int main() {
    int n;
    std::cin >> n;
    
    std::vector<int> numbers(n);
    for (int i = 0; i < n; i++) {
        std::cin >> numbers[i];
    }
    
    int result = findMaxPairSum(numbers);
    std::cout << result << std::endl;
    
    return 0;
}

R:
3 9 2 7
11
